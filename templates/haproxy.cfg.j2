# {{ ansible_managed }}

global
{% if haproxy_chroot_enabled %}
  log {{ haproxy_chroot_dir }}/dev/log local0
  chroot  {{ haproxy_chroot_dir }}
{% else %}
  log /dev/log local0
{% endif %}
  pidfile /run/haproxy.pid

  maxconn {{ haproxy_max_conn }}
{% if haproxy_nbproc_enabled %}
  nbproc  {{ haproxy_nbproc }}
{% for i in range(0,haproxy_nbproc) %}
  cpu-map {{i+1}} {{i}}
{% endfor %}
  stats bind-process {{ haproxy_nbproc }}
{% endif %}

  stats socket /run/haproxy/admin.sock mode 660 level admin

  user  {{ haproxy_user }}
  group {{ haproxy_group }}
  daemon

{% if haproxy_ssl_enabled %}
  ssl-default-bind-options  {{ haproxy_ssl_bind_options }}
  ssl-default-bind-ciphers  {{ haproxy_ssl_bind_ciphers }}
  tune.ssl.default-dh-param {{ haproxy_ssl_dh_param }}
{% endif %}

defaults
  mode  http
  log   global
  option  dontlognull
{% if haproxy_accesslog_json %}
  log-format {"type":"haproxy","timestamp":%Ts,"http_status":%ST,"http_request":"%r","remote_addr":"%ci","bytes_read":%B,"upstream_addr":"%si","backend_name":"%b","retries":%rc,"bytes_uploaded":%U,"upstream_response_time":"%Tr","upstream_connect_time":"%Tc","session_duration":"%Tt","termination_state":"%ts"}
{% endif %}
{% if haproxy_forwardfor %}
  option  forwardfor  except 127.0.0.0/8
{% endif %}
{% if haproxy_redispatch %}
  option  redispatch
{% endif %}
  retries {{ haproxy_retry }}
{% for timeout in haproxy_timeouts %}
  timeout {{ timeout.type }}  {{ timeout.value }}
{% endfor %}
  maxconn {{ haproxy_max_conn }}

{% if haproxy_stats_enabled %}
# Stats endpoint
listen stats
  bind 0.0.0.0:{{ haproxy_stats_port }}
  mode http
  maxconn {{ haproxy_stats_max_conn }}
  stats enable
  stats hide-version
  stats uri {{ haproxy_stats_uri }}
  stats auth {{ haproxy_stats_user }}:{{ haproxy_stats_pass }}
{% endif %}

#
# Endpoints
#

{% for service in haproxy_services | default([]) %}
#{{ service.name }}

{% if service.type == "listen" %}
listen {{ service.name }}
{% for bind in service.binds %}
{% if ( bind.priv_key is defined and haproxy_default_listen_mode == 'http' ) %}
  bind {{ bind.host }}:{{ bind.port }} ssl crt /etc/ssl/{{ bind.priv_key }}
{% else %}
  bind {{ bind.host }}:{{ bind.port }}
{% endif %}
{% endfor %}
  mode {{ service.mode | default(haproxy_default_listen_mode) }}
  balance {{ service.balance_type | default (haproxy_default_listen_balance)}}
{% if service.haproxy_timeouts %}
{% for timeout in service.haproxy_timeouts %}
  timeout {{ timeout.type }}  {{ timeout.value }}
{% endfor %}
{% endif %}
{% if ( haproxy_accesslog_json and haproxy_default_listen_mode == 'tcp' ) %}
  log-format {"type":"haproxy","timestamp":%Ts,"http_status":%ST,"remote_addr":"%ci","bytes_read":%B,"upstream_addr":"%si","backend_name":"%b","retries":%rc,"bytes_uploaded":%U,"upstream_connect_time":"%Tc","session_duration":"%Tt","termination_state":"%ts"}
{% endif %}
{% for acl in service.acls | default([]) %}
  acl {{ acl.name }} {{ acl.rule }}
{% endfor %}
{% for condition in service.conditions | default([]) %}
  {{ condition.state }} if {{ condition.rule }}
{% endfor %}
{% for option in service.options | default(haproxy_default_listen_options) %}
  {{ option }}
{% endfor %}
{% for endpoint in service.endpoints | default([]) %}
  server {{ endpoint.name }} {{ endpoint.address }} {{ endpoint.options | default(haproxy_default_endpoint_options) }}
{% endfor %}
{% endif %}

{% if service.type == "frontend" %}
frontend {{ service.name }}
{% for bind in service.binds %}
{% if bind.priv_key is defined %}
  bind {{ bind.host }}:{{ bind.port }} ssl crt /etc/ssl/{{ bind.priv_key }}
{% else %}
  bind {{ bind.host }}:{{ bind.port }}
{% endif %}
{% endfor %}
  mode {{ service.mode | default(haproxy_default_frontend_mode) }}
{% for acl in service.acls | default([]) %}
  acl {{ acl.name }} {{ acl.rule }}
{% endfor %}
{% for option in service.options | default(haproxy_default_frontend_options) %}
  {{ option }}
{% endfor %}
{% for condition in service.conditions | default([]) %}
  {{ condition.state }} if {{ condition.rule }}
{% endfor %}
{% if service.default_backend is defined %}
  default_backend {{ service.default_backend }}
{% endif %}

{% elif service.type == "backend" %}
backend {{ service.name }}
  balance {{ service.balance_type | default(haproxy_default_backend_balance) }}
{% for option in service.options | default(haproxy_default_backend_options) %}
  {{ option }}
{% endfor %}
{% for endpoint in service.endpoints | default([]) %}
  server {{ endpoint.name }} {{ endpoint.address }} {{ endpoint.options | default(haproxy_default_endpoint_options) }}
{% endfor %}

{% endif %}
{% endfor %}
