---
# defaults file for ansible-role-haproxy

# sysctl

# haproxy installation parameters
haproxy_rpm: http://cbs.centos.org/kojifiles/packages/haproxy/1.8.17/3.el7/x86_64/haproxy18-1.8.17-3.el7.x86_64.rpm
haproxy_state: latest
haproxy_user: haproxy
haproxy_group: haproxy

# haproxy main config option
haproxy_chroot_enabled: False
haproxy_chroot_dir: /var/lib/haproxy
haproxy_max_conn: 30000
haproxy_nbproc_enabled: True
haproxy_nbproc: "{{ ansible_processor_vcpus }}"
haproxy_forwardfor: False
haproxy_redispatch: True
haproxy_retry: 3

haproxy_ssl_enabled: False
haproxy_ssl_bind_options: no-sslv3 no-tls-tickets
haproxy_ssl_bind_ciphers: ECDH+AESGCM:DH+AESGCM:ECDH+AES256:DH+AES256:ECDH+AES128:DH+AES:RSA+AESGCM:RSA+AES:!aNULL:!MD5:!DSS
haproxy_ssl_dh_param: 2048
haproxy_ssl_certs_root_path: /etc/ssl

haproxy_accesslog_json: True
haproxy_timeouts:
  - { type: "http-request", value: "10s" }
  - { type: "queue", value: "30s" }
  - { type: "connect", value: "10s" }
  - { type: "client", value: "30s" }
  - { type: "server", value: "1m" }
  - { type: "http-keep-alive", value: "10s" }
  - { type: "check", value: "5s" }

# Stats settings
haproxy_stats_enabled: True
haproxy_stats_max_conn: 10
haproxy_stats_uri: /lb_stats
haproxy_stats_port: 2000
haproxy_stats_user: admin
haproxy_stats_pass: PleaseChangeIt123

# Selinux settings
haproxy_selinux_connect_any: True

haproxy_default_listen_balance: source
haproxy_default_listen_mode: tcp
haproxy_default_listen_options:
  - "no option clitcpka"
  - "option forceclose"

haproxy_default_frontend_mode: http
haproxy_default_frontend_options:
  - "option forwardfor"
  - "http-request set-header X-Forwarded-Port %[dst_port]"
  - "http-request set-header X-Forwarded-Proto https if { ssl_fc }"

haproxy_default_backend_balance: roundrobin
haproxy_default_backend_options: []
haproxy_default_endpoint_options: "check inter 3s fastinter 1s"

# Services config
haproxy_services: []
# haproxy_services:
#   - name: "Kafka"
#     type: listen
#     binds:
#       - { host: "*", port: "8080" }
#     acls:
#       - { name: "network_allowed", rule: "src 20.30.40.50 8.9.9.0/27" }
#     conditions:
#       - { state: "tcp-request connection reject", rule: "!network_allowed" }
#     endpoints:
#       - { name: "backend_1", address: "192.168.0.1:8080" }
#       - { name: "backend_2", address: "192.168.0.2:8080" }
#   - name: "k8s"
#     type: frontend
#     binds:
#       - { host: "*", port: "80" }
#       - { host: "*", port: "443", priv_keys: ["domain_cert_with_key.pem", "domain2_cert_with_key.pem"] }
#     mode: http
#     haproxy_timeouts:
#       - { type: "client", value: "1m" }
#     acls:
#       - { name: "forward_k8s", rule: "hdr_end(host) -i k8s.example.com" }
#     conditions:
#       - { state: "use_backend k8s_backend", rule: "forward_k8s" }
#     default_backend: company_site
#   - name: "company_site"
#     type: backend
#     balance_type: roundrobin
#     endpoints:
#       - { name: "backend_1", address: "192.168.0.1:80", options: "check" }
#       - { name: "backend_2", address: "192.168.0.2:80", options: "check" }
#   - name: "k8s_backend"
#     type: backend
#     endpoints:
#       - { name: "backend_1", address: "192.168.0.3:8080", options: "check" }
#       - { name: "backend_2", address: "192.168.0.4:8080", options: "check" }
